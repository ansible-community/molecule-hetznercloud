---
- name: Destroy
  hosts: localhost
  connection: local
  gather_facts: false
  no_log: "{{ molecule_no_log }}"
  vars:
    resource_namespace: "{{ lookup('ansible.builtin.env', 'RESOURCE_NAMESPACE') | default(molecule_scenario_directory | md5, true) }}"
  tasks:
    - name: Populate the instance config
      ansible.builtin.set_fact:
        instance_conf: "{{ lookup('file', molecule_instance_config, errors='warn') | from_yaml | default([], true) }}"

    - name: Destroy server(s)
      hetzner.hcloud.hcloud_server:
        name: "{{ resource_namespace }}-{{ item.instance }}"
        state: absent
      register: servers_jobs
      loop: "{{ instance_conf }}"
      async: 7200
      poll: 0

    - name: Wait for server(s) deletion to complete
      ansible.builtin.async_status:
        jid: "{{ item.ansible_job_id }}"
      loop: "{{ servers_jobs.results }}"
      register: servers
      until: servers is finished
      retries: 300

    - name: Destroy volume(s)
      hetzner.hcloud.hcloud_volume:
        name: "{{ resource_namespace }}-{{ item.1.name }}"
        state: absent
      loop: "{{ instance_conf | subelements('volumes', skip_missing=True) }}"
      register: volumes_jobs
      async: 7200
      poll: 0

    - name: Wait for volume(s) deletion to complete
      ansible.builtin.async_status:
        jid: "{{ item.ansible_job_id }}"
      loop: "{{ volumes_jobs.results }}"
      register: volumes
      until: volumes is finished
      retries: 300

    - name: Destroy network(s)
      hetzner.hcloud.hcloud_network:
        name: "{{ resource_namespace }}-{{ item.1.name }}"
        state: absent
      loop: "{{ instance_conf | subelements('networks', skip_missing=True) }}"
      register: networks

    - name: Remove registered SSH key
      when: instance_conf | length
      hetzner.hcloud.hcloud_ssh_key:
        name: "{{ instance_conf[0].ssh_key_name }}"
        state: absent

    - name: Populate instance config
      ansible.builtin.set_fact:
        instance_conf: []

    - name: Dump instance config
      ansible.builtin.copy:
        content: |
          # Molecule managed

          {{ instance_conf | to_yaml }}
        dest: "{{ molecule_instance_config }}"
        mode: "0600"
