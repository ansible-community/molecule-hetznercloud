name: Test

on:
  push:
    branches: [main]
  pull_request:

jobs:
  unit:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
      - uses: actions/checkout@v4

      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          make venv
          venv/bin/pip install tox tox-gh-actions

      - name: Run tests
        run: make test ARGS="--cov --cov-config=pyproject.toml --cov-report=xml"

      - name: Upload coverage reports to Codecov
        if: >
          !startsWith(github.head_ref, 'renovate/') &&
          !startsWith(github.head_ref, 'release-please--')
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage.xml
          flags: unit

  e2e:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    permissions:
      id-token: write

    steps:
      - uses: hetznercloud/tps-action@main
        with:
          tps-token: ${{ secrets.TPS_TOKEN }}

      - uses: actions/checkout@v4

      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          make venv
          venv/bin/pip install tox tox-gh-actions

      - name: Run integrations
        run: make integration ARGS="--cov --cov-config=pyproject.toml --cov-report=xml"
        env:
          PY_COLORS: "1"
          ANSIBLE_FORCE_COLOR: "1"

      - name: Upload coverage reports to Codecov
        if: >
          !startsWith(github.head_ref, 'renovate/') &&
          !startsWith(github.head_ref, 'release-please--')
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage.xml
          flags: e2e
